#!/usr/bin/env ruby
require 'trollop'
require 'whalespeak'

# ./whalespeak.rb
#
# converts text to and from the language of the whales
#
# works by:
# - creating a mapping of digits to characters
# - unpacking a string to it's binary representation
# - converting that binary representation to a base-n string (where n is the number of characters used in the encoding)
# - substituting each digit with it's mapping
#
# also randomizes capitalization because whales are expressive sometimes.

usage = "usage: #{$0} <args> 'text to convert'"

opts = Trollop::options do
  banner <<-EOS
whalespeak converts text to and from the language of the whales.

#{usage}

where <args> are:
EOS

  opt :to, "Convert text to whalespeak", :short => 't', :default => true
  opt :from, "Convert text from whalespeak", :short => 'f'
  opt :randomize, "Randomize capitalization", :short => 'r', :default => true
  
  conflicts :to, :from
end

# check for right command line args
abort usage unless ARGV.length == 1
text_to_convert = ARGV[0].downcase
abort "can't convert an empty string!" if text_to_convert.empty?

def randomize_capitalization text
  capitalized_text = text.chars.map {|char| (rand(2) == 0 ? char : char.capitalize)}

  return capitalized_text.join
end

if opts[:from]
  output = Whalespeak::Conversion.from_whalespeak text_to_convert

  if opts[:randomize]
    puts randomize_capitalization output
  else
    puts output
  end

elsif opts[:to]
  output = Whalespeak::Conversion.to_whalespeak text_to_convert

  if opts[:randomize]
    puts randomize_capitalization output
  else
    puts output
  end
end
